name: Release

on:
  push:
    # tags:
    #   - "v*.*.*"

jobs:
  Release-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      # - name: Build server:except-go
      #   run: |
      #     bash scripts.sh build server:except-go
      - name: Build go files
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: 1.21
          pkg: /home/runner/work/kfs/cmd/kfs-server
          dest: build
          prefix: kfs-server
          targets: windows/amd64,linux/amd64,linux/arm64,linux/arm,darwin/arm64,darwin/amd64
          v: true
          x: true
          race: false
          ldflags: -s -w
          buildmode: default
          trimpath: true
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cmd/kfs-server/kfs-server*

  Release-electron:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: |
          bash scripts.sh build electron
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ui/dist/*.zip
            ui/dist/*.dmg
            ui/dist/*.exe
            ui/dist/*.snap
            ui/dist/*.AppImage
